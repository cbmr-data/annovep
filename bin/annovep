#!/usr/bin/env python3
# -*- coding: utf8 -*-
import os
import subprocess
import sys

from pathlib import Path


def run_docker(image, root, argv):
    command = ["docker", "run", "-i"]
    if sys.stdin.isatty():
        command.append("-t")

    command += [
        "--rm",
        "-e",
        f"ANNOVEP_USER={os.getuid()}",
        "-v",
        f"{root}:/data/cache",
        "-v",
        f"{os.getcwd()}:/data/user",
        image,
    ]

    return subprocess.call(
        command + argv,
        stdin=sys.stdin,
    )


def main(argv):
    image = os.environ.get("ANNOVEP_IMAGE", "annovep:v1")
    root = os.environ.get("ANNOVEP_CACHE", Path("~/annovep/").expanduser())

    # The root folder must already exist, since docker will otherwise create it using
    # permissions that prevent the container from creating subfolders. This is only
    # relevant during the initial setup of the cache.
    try:
        os.makedirs(root, exist_ok=True)
    except OSError as error:
        print(f"Failed to create cache-dir at {root!r}:", file=sys.stderr)
        print("Specify a read/writable location using the command", file=sys.stderr)
        print("  $ export ANNOVEP_CACHE=/path/to/annovep/cache", file=sys.stderr)
        print(f"AnnoVEP cannot proceed, aborting.", file=sys.stderr)
        return 1

    try:
        return run_docker(image, root, argv)
    except KeyboardInterrupt:
        return 1


if __name__ == "__main__":
    sys.exit(main(sys.argv[1:]))
